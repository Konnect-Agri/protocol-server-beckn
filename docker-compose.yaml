version: "3.8"

services:
  mongo_db:
    image: mongo
    restart: unless-stopped
    volumes:
      - ./data/mongo_DB:/data/db
    healthcheck:
      test: echo 'db.stats().ok' | mongosh localhost:27017/test --quiet
      interval: 10s
      timeout: 10s
      retries: 5
      start_period: 40s

  redis_db:
    image: redis:6.2.5-alpine
    restart: unless-stopped
    volumes:
      - ./data/redis_DB:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 10s
      retries: 3

  queue_service:
    image: rabbitmq:3.9.11-management-alpine
    restart: unless-stopped
    environment:
      AMQP_URL: "${AMQP_URL}"
      RABBITMQ_DEFAULT_USER: "${RABBITMQ_DEFAULT_USER}"
      RABBITMQ_DEFAULT_PASS: "${RABBITMQ_DEFAULT_PASS}"
    healthcheck:
      test: ["CMD", "nc", "-z", "localhost", "5672"]
      interval: 5s
      timeout: 15s
      retries: 3

  protocol-server-client:
    restart: always
    build:
      context: ./protocol-server-client
      dockerfile: ./Dockerfile
    depends_on:
      mongo_db:
        condition: service_healthy
      redis_db:
        condition: service_healthy
      queue_service:
        condition: service_healthy
    ports:
      - 5003:5003
    volumes:
      - ./protocol-server-client/config:/usr/src/app/config
      - ./logs:/usr/src/app/logs

  protocol-server-network:
    restart: always
    build:
      context: ./protocol-server-network
      dockerfile: ./Dockerfile
    depends_on:
      mongo_db:
        condition: service_healthy
      redis_db:
        condition: service_healthy
      queue_service:
        condition: service_healthy
    ports:
      - 5002:5002
    volumes:
      - ./protocol-server-network/config:/usr/src/app/config
      - ./logs:/usr/src/app/logs